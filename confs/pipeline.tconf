global {
  dev_text=(SgmDev:
    no=$out@download_or_link[DataSection:dev]
    yes=(side: src=$src_out@dev_text_from_sgm trg=$trg_out@dev_text_from_sgm)
  )

  test_text=(SgmTest:
    no=$out@download_or_link[DataSection:test]
    yes=(side: src=$src_out@test_text_from_sgm trg=$trg_out@test_text_from_sgm)
  )

  src_truecaser=(UseExistingTruecaser:
    yes=""
    no=$out@train_truecaser[side:src]
  )
  trg_truecaser=(UseExistingTruecaser:
    yes=""
    no=$out@train_truecaser[side:trg]
  )

  raw_data=$out@download_or_link
  raw_data_test_src=$out@download_or_link[DataSection:test,side:src]
  raw_data_test_trg=$out@download_or_link[DataSection:test,side:trg]

  tokenized_data=(DoTokenize:
    yes=$out@tokenize
    no=$out@download_or_link
   )

  # don't do truecase when doing characterize
  # truecase will mess up the word boundary annotation
  truecased_data=(DoTruecase:
    yes=$out@truecase
    no=$tokenized_data
  )

  prepared_data=(SubwordMethod:
    sentencepiece=$out@apply_sentencepiece
    bpe=$out@apply_bpe
    none=$truecased_data
  )

  debped_output=(SubwordMethod:
    sentencepiece=$out@remove_sentencepiece
    bpe=$out@debpe
    none=$out@decode
  )

  # don't do truecase when doing characterize
  # truecase will mess up the word boundary annotation
  detruecased_output=(DoTruecase:
    yes=$out@detruecase
    no=$debped_output
  )

  detokenized_output=(DoTokenize:
    yes=$out@detokenize
    no=$detruecased_output
  )
}
